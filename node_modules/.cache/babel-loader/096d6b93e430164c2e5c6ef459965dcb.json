{"ast":null,"code":"var _jsxFileName = \"/Users/lucascurto/Documents/anima/proyectoFinal/website/src/components/CustomSelect.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport { style } from '../utils/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomSelect = _ref => {\n  let {\n    onChange,\n    options,\n    value,\n    name,\n    placeholder\n  } = _ref;\n\n  const defaultValue = (options, value) => {\n    return options ? options.find(option => option.value === value) : '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: \"no select\",\n      name: name,\n      options: options,\n      value: defaultValue(options, value),\n      onChange: value => onChange(value),\n      placeholder: placeholder,\n      className: \"react-select-container\",\n      classNamePrefix: \"react-select\",\n      styles: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomSelect;\nexport default CustomSelect;\nCustomSelect.propTypes = {\n  onChange: PropTypes.func,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"names":["React","Select","PropTypes","style","CustomSelect","onChange","options","value","name","placeholder","defaultValue","find","option","propTypes","func","array","string","bool"],"sources":["/Users/lucascurto/Documents/anima/proyectoFinal/website/src/components/CustomSelect.jsx"],"sourcesContent":["import React from 'react'\nimport Select from 'react-select'\nimport PropTypes from 'prop-types'\nimport { style } from '../utils/data'\n\nconst CustomSelect = ({ onChange, options, value, name, placeholder }) => {\n  const defaultValue = (options, value) => {\n    return options ? options.find((option) => option.value === value) : ''\n  }\n\n  return (\n    <div>\n      <Select\n        defaultValue=\"no select\"\n        name={name}\n        options={options}\n        value={defaultValue(options, value)}\n        onChange={(value) => onChange(value)}\n        placeholder={placeholder}\n        className=\"react-select-container\"\n        classNamePrefix=\"react-select\"\n        styles={style}\n      />\n    </div>\n  )\n}\n\nexport default CustomSelect\n\nCustomSelect.propTypes = {\n  onChange: PropTypes.func,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.bool\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,eAAtB;;;AAEA,MAAMC,YAAY,GAAG,QAAqD;EAAA,IAApD;IAAEC,QAAF;IAAYC,OAAZ;IAAqBC,KAArB;IAA4BC,IAA5B;IAAkCC;EAAlC,CAAoD;;EACxE,MAAMC,YAAY,GAAG,CAACJ,OAAD,EAAUC,KAAV,KAAoB;IACvC,OAAOD,OAAO,GAAGA,OAAO,CAACK,IAAR,CAAcC,MAAD,IAAYA,MAAM,CAACL,KAAP,KAAiBA,KAA1C,CAAH,GAAsD,EAApE;EACD,CAFD;;EAIA,oBACE;IAAA,uBACE,QAAC,MAAD;MACE,YAAY,EAAC,WADf;MAEE,IAAI,EAAEC,IAFR;MAGE,OAAO,EAAEF,OAHX;MAIE,KAAK,EAAEI,YAAY,CAACJ,OAAD,EAAUC,KAAV,CAJrB;MAKE,QAAQ,EAAGA,KAAD,IAAWF,QAAQ,CAACE,KAAD,CAL/B;MAME,WAAW,EAAEE,WANf;MAOE,SAAS,EAAC,wBAPZ;MAQE,eAAe,EAAC,cARlB;MASE,MAAM,EAAEN;IATV;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CApBD;;KAAMC,Y;AAsBN,eAAeA,YAAf;AAEAA,YAAY,CAACS,SAAb,GAAyB;EACvBR,QAAQ,EAAEH,SAAS,CAACY,IADG;EAEvBR,OAAO,EAAEJ,SAAS,CAACa,KAFI;EAGvBN,WAAW,EAAEP,SAAS,CAACc,MAHA;EAIvBR,IAAI,EAAEN,SAAS,CAACc,MAJO;EAKvBT,KAAK,EAAEL,SAAS,CAACe;AALM,CAAzB"},"metadata":{},"sourceType":"module"}